DAO에 대해 공부하기.
DAO는 데이터베이스 파일 관련 정보를 처리하는 기능을 구현한다.

public class JSPBoardFileDAO extends JDBConnect{
    public JSPBoardFileDAO() {
        super(); }
  - 위의 코드는 public JSPBoardFileDAO() : 기본 생성자, 부모클래스인 JDBConnect의 기본 생성자를 호출하여 데이터 베이스 연결을 설정

  public class JSPBoardFileDAO extends JDBConnect{
    public JSPBoardFileDAO() {
        super();}
    - ServletContext 를 매개변수로 받는 생성자
    이 생성자는 웹 애플리케이션의 컨텍스트 정보를 활용하여 데이터베이스 연결을 설정하는데 사용된다.
    
public JSPBoardFileDAO(String dbDriver, String dbUrl, String dbUser, String dbPass)
    - 데이터베이스 연결에 필요한 드라이버, URL, 사용자 이름 및 비밀번호를 매개변수로 받는 생성자
    이를 통해 데이터베이스에 연결을 설정한다.

    insertFile(JSPBoardFileDTO file): 파일 정보를 데이터베이스에 삽입한다.

    selectFileList(): 데이터베이스에 저장된 모든 파일 목록을 조회하여 반환한다.
SELECT idx, title, cate, ofile, sfile, postdate
FROM jspboardfile
ORDER BY idx DESC 
    -JSPBoardfile 테이블에서 파일의 idx, title, cate, ofile, sfile, postdate 를 조회
    - 위의 데이터베이스에서 결과를 가져오고, 각 레코드를 JSPBoardFileDTO 객체에 매핑한다.
    - 모든 파일 정보를 리스트에 추가하고, 리스트를 반환한다.

    (JSPBoardFileDTO file) - DTO 객체의 활용
    - JSPBoardFileDTO 객체는 각 파일 정보를 담고 있다. 이 객체는 데이터베이스 결과에서 반환된 데이터를 캡슐화 하는 역할을 한다.
    DTO 객체의 접근자 메서드 (게터 및 세터)를 통해 데이터를 가져오고 설정한다.

    리소스 해제 
    데이터베이스 연결을 사용한 후에는 반드시 ResultSet, Statement, Connection 등을 반드시 닫아야한다.
    이럴때는 try-catch-finally 문을 사용하여 예외가 발생하더라도 리소스를 적절히 해제할 수 있도록해야한다.

    
    public List<JSPBoardFileDTO> selectFileList() {
    List<JSPBoardFileDTO> fileList = new ArrayList<JSPBoardFileDTO>();
    try {
        String sql = "SELECT idx, title, cate, ofile, sfile, postdate FROM jspboardfile ORDER BY idx DESC";
        stmt = conn.createStatement();
        rs = stmt.executeQuery(sql);

        while (rs.next()) {
            JSPBoardFileDTO file = new JSPBoardFileDTO();
            file.setIdx(rs.getInt("idx"));
            file.setTitle(rs.getString("title"));
            file.setCate(rs.getString("cate"));
            file.setOfile(rs.getString("ofile"));
            file.setSfile(rs.getString("sfile"));

            fileList.add(file);
        }
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        // 리소스 해제 (반드시 닫기)
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    return fileList;}
