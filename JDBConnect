JDBConnect 작성법

public class JDBConnect {
    private String dbDriver;
    private String dbUrl;
    private String dbUser;
    private String dbPass;

dbDriver : 데이터베이스 연결에 사용할 JDBC 드라이버의 클래스 이름을 저장하는 변수
예를 들어 MySql을 사용한다면 com.mysql.cj.jdbc.Driver 같은 값이 저장된다.
dbUrl : 데이터베이스의 URL을 저장하는 변수입니다. 
똑같이 MySql 일 경우 jdbc:mysql://localhost:3306/mydatabase와 같은 URL 형식을 적으면 된다.
dbUser : 데이터베이스에 연결하기 위한 사용자 이름을 저장하는 변수
dbPass : 데이터베이스에 연결하기 위한 사용자 패스워드를 저장하는 변수

    public Connection conn;
    public Statement stmt;
    public PreparedStatement pstmt;
    public ResultSet rs;
JDBConnect 클래스는 실제 데이터베이스 연결을 설정하고, 쿼리를 실행하는 기능을 구현하려는 목적으로 사용된다.
예를 들어 데이터베이스에 연결하여 데이터를 조회하는 메서드를 작성하려면 conn.stmt.rs 등을 활용하게 된다.

public JDBConnect(String dbDriver, String dbUrl, String dbUser, String dbPass) {
    this.dbDriver = dbDriver;
    this.dbUrl = dbUrl;
    this.dbUser = dbUser;
    this.dbPass = dbPass;}

이 생성자는 데이터베이스 연결에 필요한정보 (dbDriver,dbUser,dbPass,dbUrl)를 매개변수로 받아 객체의 필드에 저장한다.

<db.open()> 메서드
public void dbOpen() {
    try {
        Class.forName(dbDriver);  // JDBC 드라이버 로드
        conn = DriverManager.getConnection(dbUrl, dbUser, dbPass);  // 데이터베이스 연결
        System.out.println("데이터베이스가 연결되었습니다.");
    } catch (Exception e) {
        System.out.println("데이터베이스 연결에 실패하였습니다.");
        e.printStackTrace();  }  }
1.Class.forName(dbDriver) : dbDriver에 지정된 JDBC 드라이버를 로드한다. 
- MySql의 경우 com.mysql.cj.jdbc.Driver와 같으 드라이버 클래스를 로드한다.

2. conn = DriverManager.getConnection(dbUrl, dbUser, dbPass)
- dbUrl, dbPass, dbUser 를 사용해 실제 데이터베이스에 연결을 시도한다.

public void dbClose() {
    try {
        if (rs != null) {
            rs.close();
        }
        if (stmt != null) {
            stmt.close();
        }
        if (pstmt != null) {
            pstmt.close();
        }
        if (conn != null) {
            conn.close();  }
        System.out.println("데이터베이스 연결 및 리소스를 해제하였습니다.");
    } catch (Exception e) {
        System.out.println("데이터베이스 연결 및 리소스 해제 중 오류가 발생했습니다.");
        e.printStackTrace();  }}

3.dbclose() - 리소스 해제
ResultSet, Statement, PreparedStatement, Connection 객체들이 null이 아닌 경우에 
각 객체의 close() 메서드를 호출하여 리소스를 해제합니다.



